{"version":3,"sources":["cardType.js","formatters.js","validator.js","assets/visa.svg","assets/ms.svg","Card.js","App.js","index.js"],"names":["cardtype","value","result","length","data","creditCardType","parseInt","toString","replace","niceType","formatters","cardNumber","VMasker","toPattern","cardHolder","trimStart","toUpperCase","substring","cardMonth","cardYear","cardCVV","validator","values","errors","isCreditCard","trimmedCardHolder","trim","concat","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_ref","react_default","a","createElement","id","x1","x2","y1","y2","stopColor","offset","stopOpacity","visa_ref2","fill","fillRule","transform","points","d","visa_SvgVisa","props","width","height","viewBox","__webpack_require__","p","ms_extends","ms_ref","x","y","ms_SvgMs","Container","styled","div","_templateObject","ButtonWrap","_templateObject2","Row","_templateObject3","PlasticCard","_templateObject4","CardIconWrap","_templateObject5","PlasticCardBackdrop","_templateObject6","PlasticCardInner","_templateObject7","SmallInputsContainer","_templateObject8","SmallInputsSlot","_templateObject9","CVVContainer","_templateObject10","CVVInputsSlot","_templateObject11","CVVNotice","_templateObject12","scheme","name","label","handleInputChange","setFieldValue","fmt","handleSubmit","setSubmitting","newVal","JSON","stringify","console","log","setTimeout","alert","Card","formik_esm","initialValues","validate","onSubmit","_ref2","isSubmitting","touched","handleBlur","cardNameError","cardHolderError","cardMonthError","cardYearError","cardCVVError","type","cardType","renderIcon","input_default","error","onBlur","onChange","evt","button_default","disabled","Content","App_templateObject","App","src_Card","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.81a55a9c.chunk.js","sourcesContent":["import creditCardType from 'credit-card-type';\n\nconst cardtype = (value) => {\n  let result = null;\n\n  if (\n    (typeof value === 'string' && value.length > 0) ||\n    typeof value === 'number'\n  ) {\n    const data = creditCardType(\n      parseInt(value.toString().replace(/ /g, ''), 10).toString()\n    );\n\n    if (data.length) {\n      result = data[0].niceType;\n    }\n\n    return result;\n  }\n\n  return result;\n};\n\nexport default cardtype;","import VMasker from 'vanilla-masker';\n\nexport default {\n  cardNumber: (value) => VMasker.toPattern(value, '9999 9999 9999 9999'),\n  cardHolder: (value) =>\n    value\n      .trimStart()\n      .toUpperCase()\n      .replace(/\\d/g, '') // убираем цифры\n      .replace(/[^A-Z\\s]+/g, '') // убираем НЕ латиницу\n      .replace(/\\s{2,}/g, ' ') // заменяем два пробела на один\n      .substring(0, 20), // только первые 20 символов\n  cardMonth: (value) => VMasker.toPattern(value, '99'),\n  cardYear: (value) => VMasker.toPattern(value, '99'),\n  cardCVV: (value) => VMasker.toPattern(value, '999'),\n};\n","import isCreditCard from 'validator/lib/isCreditCard';\n\nexport default (values) => {\n  let errors = {};\n  const { cardNumber, cardHolder, cardMonth, cardYear, cardCVV } = values;\n\n  // Валидация номера карты\n  if (!cardNumber) {\n    errors.cardNumber = 'Заполните номер карты';\n  } else if (!isCreditCard(cardNumber)) {\n    errors.cardNumber = 'Неверный номер карты';\n  }\n\n  // Валидация ФИО\n  const MIN_NAME_LENGTH = 3;\n  const trimmedCardHolder = cardHolder.trim();\n\n  if (!trimmedCardHolder) {\n    errors.cardHolder = 'Введите Фамилию и Имя';\n  } else if (trimmedCardHolder.length < MIN_NAME_LENGTH) {\n    errors.cardHolder = `Не короче ${MIN_NAME_LENGTH} символов`;\n  }\n\n  // Валидация месяца\n  const MAX_MONTH_VALID = 12;\n\n  if (!cardMonth) {\n    errors.cardMonth = 'Введите месяц';\n  } else if (parseInt(cardMonth, 10) > MAX_MONTH_VALID) {\n    errors.cardMonth = 'Неверно указан месяц';\n  }\n\n  // Валидация года\n  const MAX_YEAR_VALID = 18; // нужно фетчить дату с бека, в браузере может быть сбитая дата\n\n  if (!cardYear) {\n    errors.cardYear = 'Введите год';\n  } else if (parseInt(cardYear, 10) < MAX_YEAR_VALID) {\n    errors.cardYear = 'Карта уже истекла';\n  }\n\n  // Валидация CVV\n  if (!cardCVV) {\n    errors.cardCVV = 'Введите CVV код';\n  } else if (cardCVV.length < 3) {\n    errors.cardCVV = 'Введите код полностью';\n  }\n\n  return errors;\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"linearGradient\", {\n  id: \"a\",\n  x1: \"-233.561%\",\n  x2: \"372.942%\",\n  y1: \"26.058%\",\n  y2: \"23.566%\"\n}, React.createElement(\"stop\", {\n  stopColor: \"#191E5F\",\n  offset: \"0%\"\n}), React.createElement(\"stop\", {\n  stopColor: \"#142787\",\n  stopOpacity: 0.818,\n  offset: \"100%\"\n})), React.createElement(\"linearGradient\", {\n  id: \"b\",\n  x1: \"-182.481%\",\n  x2: \"225.539%\",\n  y1: \"27.757%\",\n  y2: \"24.759%\"\n}, React.createElement(\"stop\", {\n  stopColor: \"#191E5F\",\n  offset: \"0%\"\n}), React.createElement(\"stop\", {\n  stopColor: \"#142787\",\n  stopOpacity: 0.818,\n  offset: \"100%\"\n})), React.createElement(\"linearGradient\", {\n  id: \"c\",\n  x1: \"-230.002%\",\n  x2: \"110.954%\",\n  y1: \"26.836%\",\n  y2: \"23.739%\"\n}, React.createElement(\"stop\", {\n  stopColor: \"#191E5F\",\n  offset: \"0%\"\n}), React.createElement(\"stop\", {\n  stopColor: \"#142787\",\n  stopOpacity: 0.818,\n  offset: \"100%\"\n})), React.createElement(\"linearGradient\", {\n  id: \"d\",\n  x1: \"-13.859%\",\n  x2: \"265.571%\",\n  y1: \"26.026%\",\n  y2: \"23.531%\"\n}, React.createElement(\"stop\", {\n  stopColor: \"#191E5F\",\n  offset: \"0%\"\n}), React.createElement(\"stop\", {\n  stopColor: \"#142787\",\n  stopOpacity: 0.818,\n  offset: \"100%\"\n})), React.createElement(\"linearGradient\", {\n  id: \"e\",\n  x1: \"22.862%\",\n  x2: \"428.639%\",\n  y1: \"47.883%\",\n  y2: \"43.303%\"\n}, React.createElement(\"stop\", {\n  stopColor: \"#191E5F\",\n  offset: \"0%\"\n}), React.createElement(\"stop\", {\n  stopColor: \"#142787\",\n  stopOpacity: 0.818,\n  offset: \"100%\"\n})));\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  transform: \"translate(0 8)\"\n}, React.createElement(\"polygon\", {\n  fill: \"url(#a)\",\n  points: \"13.19 .109 15.842 .109 14.183 9.755 11.532 9.755\"\n}), React.createElement(\"path\", {\n  fill: \"url(#b)\",\n  d: \"M23.8148787,0.420832903 C23.2894296,0.225397298 22.4661653,0.015671127 21.43798,0.015671127 C18.8174915,0.015671127 16.9716092,1.32409433 16.9558534,3.19921189 C16.9410922,4.58534615 18.2736524,5.35856359 19.2796208,5.8200494 C20.3119311,6.29286996 20.6589506,6.59444979 20.6539804,7.01666194 C20.6474693,7.66328472 19.8296228,7.95870529 19.067393,7.95870529 C18.0059079,7.95870529 17.4419886,7.81249764 16.5710107,7.45232616 L16.2292596,7.29902338 L15.8570415,9.45852271 C16.4764275,9.72777668 17.6219097,9.96110702 18.8112292,9.97317949 C21.5989649,9.97317949 23.4087144,8.67978642 23.4292909,6.67738408 C23.4392807,5.57996854 22.7326671,4.74485831 21.2026903,4.05639857 C20.2756982,3.61013917 19.708002,3.31235362 19.7140161,2.86047652 C19.7140161,2.45950339 20.1945353,2.03073751 21.2327603,2.03073751 C22.1000107,2.01738324 22.7281938,2.20488513 23.2177095,2.40032074 L23.4553346,2.51163923 L23.8148787,0.420832903\"\n}), React.createElement(\"path\", {\n  fill: \"url(#c)\",\n  d: \"M30.6154544,0.192529006 L28.5661913,0.192529006 C27.9313971,0.192529006 27.4562957,0.36431128 27.1775175,0.992504262 L23.2388324,9.83308335 L26.0236858,9.83308335 C26.0236858,9.83308335 26.4790052,8.64440447 26.5819879,8.38342998 C26.8863128,8.38342998 29.591693,8.38756758 29.9784241,8.38756758 C30.0577979,8.72526813 30.3010896,9.83308152 30.3010896,9.83308152 L32.7619348,9.83308152 L30.6154544,0.192529006 L30.6154544,0.192529006 Z M27.3452116,6.4102993 C27.5645468,5.85449488 28.4018265,3.71362249 28.4018265,3.71362249 C28.3861702,3.73929615 28.6195215,3.15510826 28.7534687,2.7929167 L28.9326941,3.62462688 C28.9326941,3.62462688 29.4404991,5.92732756 29.546663,6.41020014 L27.3452116,6.41032255 L27.3452116,6.4102993 Z\"\n}), React.createElement(\"g\", {\n  transform: \"translate(.006 .164)\"\n}, React.createElement(\"path\", {\n  fill: \"url(#d)\",\n  d: \"M9.31539776,0.0268563821 L6.71896517,6.60519166 L6.44232382,5.26833517 C5.95897185,3.72727161 4.45300118,2.05759309 2.76939556,1.22169436 L5.1435111,9.65819561 L7.94943764,9.65504184 L12.1246046,0.0268563821 L9.31539776,0.0268563821\"\n}), React.createElement(\"path\", {\n  fill: \"url(#e)\",\n  d: \"M4.31025703,0.0208937725 L0.0338470635,0.0208937725 L0,0.221602111 C3.32700233,1.02009902 5.52845311,2.94976703 6.44227412,5.26833517 L5.51239936,0.8353074 C5.35186189,0.224460221 4.88625354,0.0421817671 4.31025703,0.0208937725\"\n})));\n\nvar SvgVisa = function SvgVisa(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 33,\n    height: 26,\n    viewBox: \"0 0 33 26\"\n  }, props), _ref, _ref2);\n};\n\nexport default __webpack_public_path__ + \"static/media/visa.47a173b7.svg\";\nexport { SvgVisa as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"none\",\n  transform: \"translate(0 1)\"\n}, React.createElement(\"path\", {\n  fill: \"#231F20\",\n  d: \"M5.77589744,24.7794872 L5.77589744,23.0871795 C5.79584977,22.7992602 5.69094694,22.516677 5.4879516,22.3115221 C5.28495626,22.1063673 5.00349893,21.9984801 4.71538462,22.0153846 C4.33569681,21.990493 3.97255448,22.1742257 3.76769231,22.4948718 C3.5809168,22.183786 3.23892466,21.9998029 2.87641026,22.0153846 C2.56077157,21.9994281 2.26028659,22.1518169 2.08666667,22.4158974 L2.08666667,22.0830769 L1.5,22.0830769 L1.5,24.7794872 L2.09230769,24.7794872 L2.09230769,23.2958974 C2.06679851,23.1092049 2.12595011,22.92087 2.2536205,22.7822876 C2.3812909,22.6437052 2.56415388,22.5693406 2.75230769,22.5794872 C3.14153846,22.5794872 3.33897436,22.8333333 3.33897436,23.2902564 L3.33897436,24.7907692 L3.93128205,24.7907692 L3.93128205,23.2958974 C3.90681962,23.1094172 3.96633291,22.9216925 4.0937666,22.783367 C4.22120028,22.6450416 4.40342549,22.5703664 4.59128205,22.5794872 C4.99179487,22.5794872 5.18358974,22.8333333 5.18358974,23.2902564 L5.18358974,24.7907692 L5.77589744,24.7794872 Z M14.5392308,22.0830769 L13.5746154,22.0830769 L13.5746154,21.2651282 L12.9823077,21.2651282 L12.9823077,22.0830769 L12.4464103,22.0830769 L12.4464103,22.6189744 L12.9935897,22.6189744 L12.9935897,23.86 C12.9935897,24.4861538 13.2361538,24.8584615 13.93,24.8584615 C14.1892216,24.8593323 14.4434201,24.7869835 14.6633333,24.6497436 L14.4941026,24.1476923 C14.3367753,24.2415335 14.1582164,24.2939367 13.9751282,24.3 C13.6930769,24.3 13.5858974,24.1194872 13.5858974,23.8487179 L13.5858974,22.6189744 L14.5448718,22.6189744 L14.5392308,22.0830769 Z M19.5428205,22.0153846 C19.2514382,22.0068152 18.9787132,22.1583291 18.8320513,22.4102564 L18.8320513,22.0830769 L18.2510256,22.0830769 L18.2510256,24.7794872 L18.8376923,24.7794872 L18.8376923,23.2676923 C18.8376923,22.8220513 19.0294872,22.5738462 19.4017949,22.5738462 C19.527275,22.5721298 19.6518658,22.5951311 19.7684615,22.6415385 L19.9489744,22.0774359 C19.8149921,22.0295052 19.6738347,22.0047073 19.5315385,22.0041026 L19.5428205,22.0153846 Z M11.9782051,22.2974359 C11.646125,22.0999935 11.2643192,22.0020946 10.8782051,22.0153846 C10.195641,22.0153846 9.75,22.3425641 9.75,22.8784615 C9.75,23.3184615 10.0771795,23.5892308 10.6807692,23.6738462 L10.9628205,23.7133333 C11.284359,23.7584615 11.4366667,23.8430769 11.4366667,23.9953846 C11.4366667,24.2041026 11.2223077,24.3225641 10.8217949,24.3225641 C10.4996366,24.3318893 10.1837112,24.2325417 9.92487179,24.0405128 L9.64282051,24.4974359 C9.98455775,24.7360486 10.3938728,24.8586454 10.8105128,24.8471795 C11.5889744,24.8471795 12.0402564,24.4805128 12.0402564,23.9671795 C12.0402564,23.4538462 11.6848718,23.2451282 11.0982051,23.1605128 L10.8161538,23.1210256 C10.5623077,23.0871795 10.3592308,23.0364103 10.3592308,22.8558974 C10.3592308,22.6753846 10.5510256,22.54 10.8725641,22.54 C11.1697547,22.5434523 11.4610911,22.6230843 11.7187179,22.7712821 L11.9782051,22.2974359 Z M27.6912821,22.0153846 C27.3998998,22.0068152 27.1271747,22.1583291 26.9805128,22.4102564 L26.9805128,22.0830769 L26.3994872,22.0830769 L26.3994872,24.7794872 L26.9861538,24.7794872 L26.9861538,23.2676923 C26.9861538,22.8220513 27.1779487,22.5738462 27.5502564,22.5738462 C27.6757366,22.5721298 27.8003273,22.5951311 27.9169231,22.6415385 L28.0974359,22.0774359 C27.9634536,22.0295052 27.8222963,22.0047073 27.68,22.0041026 L27.6912821,22.0153846 Z M20.1323077,23.425641 C20.1181989,23.8087893 20.2661988,24.1801459 20.53998,24.4485588 C20.8137613,24.7169718 21.1879754,24.8575899 21.5707692,24.8358974 C21.923017,24.8538189 22.2691942,24.7390974 22.5410256,24.514359 L22.2589744,24.0405128 C22.0561713,24.1951647 21.808872,24.2802356 21.5538462,24.2830769 C21.104172,24.2466932 20.7577813,23.8711437 20.7577813,23.42 C20.7577813,22.9688563 21.104172,22.5933068 21.5538462,22.5569231 C21.808872,22.5597644 22.0561713,22.6448353 22.2589744,22.7994872 L22.5410256,22.325641 C22.2691942,22.1009026 21.923017,21.9861811 21.5707692,22.0041026 C21.1879754,21.9824101 20.8137613,22.1230282 20.53998,22.3914412 C20.2661988,22.6598541 20.1181989,23.0312107 20.1323077,23.414359 L20.1323077,23.425641 Z M25.6266667,23.425641 L25.6266667,22.0830769 L25.04,22.0830769 L25.04,22.4102564 C24.837883,22.150191 24.5229933,22.0032425 24.1938462,22.0153846 C23.414983,22.0153846 22.7835897,22.6467779 22.7835897,23.425641 C22.7835897,24.2045041 23.414983,24.8358974 24.1938462,24.8358974 C24.5229933,24.8480395 24.837883,24.701091 25.04,24.4410256 L25.04,24.7682051 L25.6266667,24.7682051 L25.6266667,23.425641 Z M23.4435897,23.425641 C23.4696781,22.9830091 23.8447913,22.6424152 24.2878794,22.6590461 C24.7309674,22.675677 25.0794935,23.043432 25.0723276,23.4867742 C25.0651617,23.9301164 24.7049326,24.2864155 24.2615385,24.2887179 C24.0357674,24.2915746 23.8190633,24.2000066 23.6637483,24.0361225 C23.5084334,23.8722385 23.428624,23.6509336 23.4435897,23.425641 Z M16.3641026,22.0153846 C15.5852395,22.0262887 14.9626857,22.6665215 14.9735897,23.4453846 C14.9844938,24.2242477 15.6247266,24.8468015 16.4035897,24.8358974 C16.809388,24.8567266 17.2084528,24.7260505 17.5233333,24.4692308 L17.2412821,24.0348718 C17.0185636,24.2134889 16.7426441,24.3127405 16.4571795,24.3169231 C16.0539495,24.3516013 15.6963688,24.0590353 15.6505128,23.6569231 L17.6530769,23.6569231 C17.6530769,23.5835897 17.6530769,23.5102564 17.6530769,23.4312821 C17.6530769,22.5851282 17.1284615,22.0210256 16.3725641,22.0210256 L16.3641026,22.0153846 Z M16.3641026,22.54 C16.5414008,22.5362201 16.7129351,22.6030469 16.8409495,22.7257713 C16.9689638,22.8484958 17.0429656,23.017059 17.0466667,23.194359 L15.6364103,23.194359 C15.6576567,22.8177707 15.9758528,22.5271349 16.3528205,22.54 L16.3641026,22.54 Z M31.0617949,23.4312821 L31.0617949,21 L30.4976923,21 L30.4976923,22.4102564 C30.2955753,22.150191 29.9806856,22.0032425 29.6515385,22.0153846 C28.8726754,22.0153846 28.2412821,22.6467779 28.2412821,23.425641 C28.2412821,24.2045041 28.8726754,24.8358974 29.6515385,24.8358974 C29.9806856,24.8480395 30.2955753,24.701091 30.4976923,24.4410256 L30.4976923,24.7682051 L31.0617949,24.7682051 L31.0617949,23.4312821 Z M32.0405128,24.3874359 C32.0771831,24.3869866 32.1135891,24.393693 32.1476923,24.4071795 C32.1800839,24.4203976 32.2097336,24.4395264 32.2351282,24.4635897 C32.2599118,24.4879086 32.279992,24.5165946 32.294359,24.5482051 C32.3232301,24.6147826 32.3232301,24.6903456 32.294359,24.7569231 C32.279992,24.7885336 32.2599118,24.8172196 32.2351282,24.8415385 C32.2097336,24.8656018 32.1800839,24.8847307 32.1476923,24.8979487 C32.1139258,24.9128481 32.0774204,24.9205335 32.0405128,24.9205128 C31.931373,24.9196902 31.8325036,24.8559744 31.7866667,24.7569231 C31.7581299,24.6902767 31.7581299,24.6148515 31.7866667,24.5482051 C31.8010336,24.5165946 31.8211138,24.4879086 31.8458974,24.4635897 C31.871292,24.4395264 31.9009418,24.4203976 31.9333333,24.4071795 C31.9700705,24.3925659 32.0094696,24.3858393 32.0489744,24.3874359 L32.0405128,24.3874359 Z M32.0405128,24.8641026 C32.0686642,24.8642736 32.0965353,24.8585071 32.1223077,24.8471795 C32.1465744,24.8363452 32.1685822,24.8210354 32.1871795,24.8020513 C32.2603145,24.722257 32.2603145,24.5997943 32.1871795,24.52 C32.1686266,24.5009635 32.1466081,24.4856463 32.1223077,24.4748718 C32.0965099,24.463624 32.0686559,24.4578611 32.0405128,24.4579487 C32.0123941,24.4580973 31.9845872,24.4638505 31.9587179,24.4748718 C31.9333769,24.4852626 31.9103637,24.5006048 31.8910256,24.52 C31.8178906,24.5997943 31.8178906,24.722257 31.8910256,24.8020513 C31.9104112,24.8213886 31.9334122,24.8367226 31.9587179,24.8471795 C31.987174,24.859451 32.0180056,24.8652319 32.0489744,24.8641026 L32.0405128,24.8641026 Z M32.0574359,24.5284615 C32.0837658,24.5271847 32.1097115,24.535168 32.1307692,24.5510256 C32.1482853,24.5655219 32.1577366,24.5875749 32.1561538,24.6102564 C32.1569726,24.6291976 32.1498107,24.6476141 32.1364103,24.6610256 C32.120062,24.6758745 32.0992067,24.6848125 32.0771795,24.6864103 L32.1589744,24.7794872 L32.0941026,24.7794872 L32.0179487,24.6864103 L31.9925641,24.6864103 L31.9925641,24.7794872 L31.9389744,24.7794872 L31.9389744,24.5312821 L32.0574359,24.5284615 Z M31.9953846,24.5764103 L31.9953846,24.6441026 L32.0574359,24.6441026 C32.0684778,24.6473946 32.0802402,24.6473946 32.0912821,24.6441026 C32.0953049,24.6361192 32.0953049,24.6267013 32.0912821,24.6187179 C32.0953049,24.6107346 32.0953049,24.6013167 32.0912821,24.5933333 C32.0802402,24.5900413 32.0684778,24.5900413 32.0574359,24.5933333 L31.9953846,24.5764103 Z M28.8928205,23.4312821 C28.9189088,22.9886501 29.2940221,22.6480562 29.7371101,22.6646871 C30.1801982,22.681318 30.5287242,23.0490731 30.5215583,23.4924152 C30.5143925,23.9357574 30.1541633,24.2920566 29.7107692,24.294359 C29.4849982,24.2972157 29.268294,24.2056476 29.1129791,24.0417636 C28.9576641,23.8778795 28.8778547,23.6565746 28.8928205,23.4312821 Z M9.08435897,23.4312821 L9.08435897,22.0830769 L8.49769231,22.0830769 L8.49769231,22.4102564 C8.2955753,22.150191 7.98068562,22.0032425 7.65153846,22.0153846 C6.87267535,22.0153846 6.24128205,22.6467779 6.24128205,23.425641 C6.24128205,24.2045041 6.87267535,24.8358974 7.65153846,24.8358974 C7.98068562,24.8480395 8.2955753,24.701091 8.49769231,24.4410256 L8.49769231,24.7682051 L9.08435897,24.7682051 L9.08435897,23.4312821 Z M6.90128205,23.4312821 C6.92737039,22.9886501 7.30248361,22.6480562 7.74557169,22.6646871 C8.18865976,22.681318 8.53718576,23.0490731 8.53001988,23.4924152 C8.522854,23.9357574 8.16262487,24.2920566 7.71923077,24.294359 C7.49248679,24.2988104 7.27427397,24.2079404 7.11770809,24.043868 C6.96114221,23.8797955 6.88058352,23.6575693 6.89564103,23.4312821 L6.90128205,23.4312821 Z\"\n}), React.createElement(\"rect\", {\n  width: 8.885,\n  height: 15.967,\n  x: 12.029,\n  y: 2.214,\n  fill: \"#FF5F00\"\n}), React.createElement(\"path\", {\n  fill: \"#EB001B\",\n  d: \"M12.5935897,10.1989744 C12.5902679,7.08272859 14.0204431,4.13812787 16.4717949,2.21410256 C12.3086588,-1.0576777 6.33022847,-0.581114614 2.73798402,3.3088761 C-0.854260431,7.19886681 -0.854260431,13.1962614 2.73798402,17.0862521 C6.33022847,20.9762428 12.3086588,21.4528059 16.4717949,18.1810256 C14.021223,16.2576111 12.5911351,13.3142304 12.5935897,10.1989744 Z\"\n}), React.createElement(\"path\", {\n  fill: \"#F79E1B\",\n  d: \"M32.9012821,10.1989744 C32.9011914,14.0865945 30.6813751,17.6329014 27.1845977,19.3317649 C23.6878202,21.0306285 19.5279869,20.5837908 16.4717949,18.1810256 C18.9212975,16.2559782 20.351493,13.3129888 20.351493,10.1975641 C20.351493,7.08213945 18.9212975,4.13915 16.4717949,2.21410256 C19.5279869,-0.188662643 23.6878202,-0.635500299 27.1845977,1.06336326 C30.6813751,2.76222683 32.9011914,6.30853374 32.9012821,10.1961538 L32.9012821,10.1989744 Z\"\n}));\n\nvar SvgMs = function SvgMs(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 33,\n    height: 26,\n    viewBox: \"0 0 33 26\"\n  }, props), _ref);\n};\n\nexport default __webpack_public_path__ + \"static/media/ms.d12b810b.svg\";\nexport { SvgMs as ReactComponent };","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport styled from 'styled-components';\nimport Input from 'arui-feather/input';\nimport Button from 'arui-feather/button';\n\nimport cardType from './cardType';\nimport fmt from './formatters';\nimport validator from './validator';\n\nimport { ReactComponent as IconVisa } from './assets/visa.svg';\nimport { ReactComponent as IconMs } from './assets/ms.svg';\n\nconst renderIcon = (name) => {\n  switch (name) {\n    case 'Visa':\n      return <IconVisa />;\n    case 'Mastercard':\n      return <IconMs />;\n    default:\n      return null;\n  }\n};\n\nconst Container = styled.div`\n  position: relative;\n  padding-right: 100px;\n  padding-bottom: 50px;\n`;\n\nconst ButtonWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`;\n\nconst Row = styled.div`\n  margin-bottom: 5px;\n`;\n\nconst PlasticCard = styled.div`\n  position: relative;\n  z-index: 1;\n  width: 380px;\n  height: 250px;\n  border-radius: 10px;\n  background-color: #f0f0ee;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);\n`;\n\nconst CardIconWrap = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 30px;\n  max-width: 33px;\n`;\n\nconst PlasticCardBackdrop = styled.div`\n  position: absolute;\n  z-index: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 0;\n  width: 380px;\n  height: 250px;\n  border-radius: 10px;\n  background-color: #e0ddd7;\n  box-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(0, 0, 0, 0.1);\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 50px;\n    width: 100%;\n    height: 50px;\n    background-color: #8e8b85;\n  }\n`;\n\nconst PlasticCardInner = styled.div`\n  padding: 30px;\n`;\n\nconst SmallInputsContainer = styled.div`\n  display: flex;\n`;\n\nconst SmallInputsSlot = styled.div`\n  width: 50px;\n  margin-right: 10px;\n`;\n\nconst CVVContainer = styled.div`\n  position: absolute;\n  top: 130px;\n  right: 30px;\n`;\n\nconst CVVInputsSlot = styled.div`\n  width: 50px;\n`;\n\nconst CVVNotice = styled.div`\n  margin-top: 5px;\n  font-size: 8px;\n  opacity: 0.5;\n`;\n\nconst scheme = {\n  cardNumber: {\n    name: 'cardNumber',\n    label: 'Номер карты',\n  },\n  cardHolder: {\n    name: 'cardHolder',\n    label: 'Фамилия Имя',\n  },\n  cardMonth: {\n    name: 'cardMonth',\n    label: 'ММ',\n  },\n  cardYear: {\n    name: 'cardYear',\n    label: 'ГГ',\n  },\n  cardCVV: {\n    name: 'cardCVV',\n    label: 'CVV',\n  },\n};\n\nconst handleInputChange = (name, value, setFieldValue) => {\n  setFieldValue(name, fmt[name](value));\n};\n\nconst handleSubmit = (values, { setSubmitting }) => {\n  const newVal = JSON.stringify(values, null, 2);\n  console.log('🏁', newVal);\n\n  setTimeout(() => {\n    alert(newVal);\n    setSubmitting(false);\n  }, 100);\n};\n\nconst Card = () => {\n  const { cardNumber, cardHolder, cardMonth, cardYear, cardCVV } = scheme;\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          cardNumber: '',\n          cardHolder: '',\n          cardMonth: '',\n          cardYear: '',\n          cardCVV: '',\n        }}\n        validate={validator}\n        onSubmit={handleSubmit}\n      >\n        {({\n          isSubmitting,\n          setFieldValue,\n          errors,\n          touched,\n          handleBlur,\n          values,\n        }) => {\n          const cardNameError =\n            touched[cardNumber.name] && errors[cardNumber.name];\n          const cardHolderError =\n            touched[cardHolder.name] && errors[cardHolder.name];\n          const cardMonthError =\n            touched[cardMonth.name] && errors[cardMonth.name];\n          const cardYearError = touched[cardYear.name] && errors[cardYear.name];\n          const cardCVVError = touched[cardCVV.name] && errors[cardCVV.name];\n\n          const type = cardType(values[cardNumber.name]);\n\n          return (\n            <Form>\n              <Container>\n                <PlasticCard>\n                  <CardIconWrap>{renderIcon(type)}</CardIconWrap>\n\n                  <PlasticCardInner>\n                    <Row>\n                      <Input\n                        type=\"text\"\n                        width=\"available\"\n                        name={cardNumber.name}\n                        label={cardNumber.label}\n                        value={values[cardNumber.name]}\n                        error={cardNameError ? cardNameError : null}\n                        onBlur={handleBlur}\n                        onChange={(evt) =>\n                          handleInputChange(cardNumber.name, evt, setFieldValue)\n                        }\n                      />\n                    </Row>\n\n                    <Row>\n                      <Input\n                        type=\"text\"\n                        width=\"available\"\n                        name={cardHolder.name}\n                        label={cardHolder.label}\n                        value={values[cardHolder.name]}\n                        error={cardHolderError ? cardHolderError : null}\n                        onBlur={handleBlur}\n                        onChange={(evt) =>\n                          handleInputChange(cardHolder.name, evt, setFieldValue)\n                        }\n                      />\n                    </Row>\n                    <SmallInputsContainer>\n                      <SmallInputsSlot>\n                        <Input\n                          type=\"text\"\n                          width=\"available\"\n                          name={cardMonth.name}\n                          label={cardMonth.label}\n                          value={values[cardMonth.name]}\n                          error={cardMonthError ? cardMonthError : null}\n                          onBlur={handleBlur}\n                          onChange={(evt) =>\n                            handleInputChange(\n                              cardMonth.name,\n                              evt,\n                              setFieldValue\n                            )\n                          }\n                        />\n                      </SmallInputsSlot>\n\n                      <SmallInputsSlot>\n                        <Input\n                          type=\"text\"\n                          width=\"available\"\n                          name={cardYear.name}\n                          label={cardYear.label}\n                          value={values[cardYear.name]}\n                          error={cardYearError ? cardYearError : null}\n                          onBlur={handleBlur}\n                          onChange={(evt) =>\n                            handleInputChange(cardYear.name, evt, setFieldValue)\n                          }\n                        />\n                      </SmallInputsSlot>\n                    </SmallInputsContainer>\n                  </PlasticCardInner>\n                </PlasticCard>\n\n                <PlasticCardBackdrop>\n                  <CVVContainer>\n                    <CVVInputsSlot>\n                      <Input\n                        type=\"text\"\n                        width=\"available\"\n                        name={cardCVV.name}\n                        label={cardCVV.label}\n                        value={values[cardCVV.name]}\n                        error={cardCVVError ? cardCVVError : null}\n                        onBlur={handleBlur}\n                        onChange={(evt) =>\n                          handleInputChange(cardCVV.name, evt, setFieldValue)\n                        }\n                      />\n                      <CVVNotice>Три цифры на&nbsp;обороте карты</CVVNotice>\n                    </CVVInputsSlot>\n                  </CVVContainer>\n                </PlasticCardBackdrop>\n              </Container>\n              <ButtonWrap>\n                <Button type=\"submit\" disabled={isSubmitting}>\n                  Оплатить\n                </Button>\n              </ButtonWrap>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Card from './Card';\nimport './App.css';\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <Content>\n        <Card />\n      </Content>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}